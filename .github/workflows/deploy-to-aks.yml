name: Deploy to AKS

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: spring-boot-demo
  REGISTRY: acrspring2025.azurecr.io
  TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Kubeconfig
        run: |
          az aks get-credentials --resource-group rg-aks-demo --name aks-demo-cluster

      - name: Deploy Application to AKS
        run: |
          kubectl create deployment ${{ env.IMAGE_NAME }} --image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl create service loadbalancer ${{ env.IMAGE_NAME }} --tcp=80:8080 --dry-run=client -o yaml | kubectl apply -f -   